
const characterSamples = {
    "Townsfolk": [
        { name: "Acrobat", value: "Player('You', claim=Acrobat, night_info={\n    2: Acrobat.Choice(Fraser),\n    3: Acrobat.Choice(Josh),\n}),\n"},
        { name: "Alsaahir", value: "Player('You', claim=Alsaahir),\n"},
        { name: "Artist", value: "Player('Adam', claim=Artist, day_info={\n    1: Artist.Ping(IsCharacter(Louisa, Drunk))\n}),\n"},
        { name: "Atheist", value: "Player('Finn', claim=Atheist),\n"},
        { name: "Balloonist", value: "Player('Sula', claim=Balloonist, night_info={\n    1: Balloonist.Ping(Tim),\n    2: Balloonist.Ping(Matthew),\n    3: Balloonist.Ping(Steph),\n}),\n"},
        { name: "Chambermaid", value: "Player('You', claim=Chambermaid, night_info={\n    1: Chambermaid.Ping(Anna, Steph, 2),\n    2: Chambermaid.Ping(Tim, Steph, 0),\n    3: Chambermaid.Ping(Tim, Steph, 1),\n}),\n"},
        { name: "Chef", value: "Player('Aoife', claim=Chef, night_info={\n    1: Chef.Ping(0)\n}),\n"},
        { name: "Clockmaker", value: "Player('Anna', claim=Clockmaker, night_info={\n    1: Clockmaker.Ping(1)\n}),\n"},
        { name: "Courtier", value: "Player('Sarah', claim=Courtier, night_info={\n    1: Courtier.Choice(Vortox)\n}),\n"},
        { name: "Dreamer", value: "Player('Steph', claim=Dreamer, night_info={\n    1: Dreamer.Ping(Sarah, FortuneTeller, Leviathan),\n    2: Dreamer.Ping(You, Savant, Goblin),\n    3: Dreamer.Ping(Fraser, Mutant, Goblin),\n}),\n"},
        { name: "Empath", value: "Player('Oscar', claim=Empath, night_info={\n    1: Empath.Ping(1),\n    2: Empath.Ping(2),\n    3: Empath.Ping(1),\n}),\n"},
        { name: "Exorcist", value: "Player('Matthew', claim=Exorcist, night_info={\n    2: Exorcist.Choice(Jasmine),\n    3: Exorcist.Choice(Aoife),\n}),\n"},
        { name: "Flowergirl", value: "Player('Emerald', claim=Flowergirl,\n    day_info={\n        1: Flowergirl.Voters([Tesso, Beardy, Emerald, Alanna, Aero, Sam]),\n        2: Flowergirl.Voters([Emerald, Alanna, Sam, Theo, Karen]),\n        3: Flowergirl.Voters([Beardy, Karen, Tesso]),\n    },\n    night_info={\n        2: Flowergirl.Ping(True),\n        3: Flowergirl.Ping(False),\n        4: Flowergirl.Ping(True),\n    }\n),\n"},
        { name: "FortuneTeller", value: "Player('Reggie', claim=FortuneTeller, night_info={\n    1: FortuneTeller.Ping(Evin, BenD, demon=True),\n    2: FortuneTeller.Ping(Lachlan, Steffen, demon=True),\n    3: FortuneTeller.Ping(Steve, Jamie, demon=False),\n}),\n"},
        { name: "Gambler", value: "Player('Anna', claim=Gambler, night_info={\n    2: Gambler.Gamble(Sula, Goblin),\n    3: Gambler.Gamble(You, Drunk),\n}),\n"},
        { name: "Gossip", value: "Player('Oscar', claim=Gossip, day_info={\n    1: Gossip.Gossip(IsCategory(Fraser, DEMON)),\n    2: Gossip.Gossip(IsInPlay(Pukka)),\n}),\n"},
        { name: "Investigator", value: "Player('Oscar', claim=Investigator, night_info={\n    1: Investigator.Ping(Sula, Anna, Goblin)\n}),\n"},
        { name: "Juggler", value: "Player('Matthew', claim=Juggler,\n    day_info={\n        1: Juggler.Juggle({\n            Steph: Knight,\n            Sarah: Leviathan,\n            Anna: Goblin,\n            Sula: Goblin,\n            You: Seamstress,\n        })\n    },\n    night_info={2: Juggler.Ping(2)}\n),\n"},
        { name: "Knight", value: "Player('Tim', claim=Knight, night_info={\n    1: Knight.Ping(Sula, Anna)\n}),\n"},
        { name: "Librarian", value: "Player('Oscar', claim=Librarian, night_info={\n    1: Librarian.Ping(None)\n}),\n"},
        { name: "Mathematician", value: "Player('Karen', claim=Mathematician, night_info={\n    1: Mathematician.Ping(0),\n    2: Mathematician.Ping(1),\n}),\n"},
        { name: "Mayor", value: "Player('Jasmine', claim=Mayor),\n"},
        { name: "NightWatchman", value: "Player('Fraser', claim=NightWatchman, night_info={\n    1: NightWatchman.Choice(Tim)\n}),\n# Give someone else a `NightWatchman.Ping(Fraser)` the same night\n"},
        { name: "Noble", value: "Player('Matt', claim=Noble, night_info={\n    1: Noble.Ping(Tim, Sula, Oscar)\n}),\n"},
        { name: "Oracle", value: "Player('Alanna', claim=Oracle, night_info={\n    2: Oracle.Ping(0),\n    3: Oracle.Ping(1),\n}),\n"},
        { name: "Philosopher", value: "Player('Hannah', claim=Philosopher, night_info={\n    1: [\n        Philosopher.Choice(Chambermaid),\n        Chambermaid.Ping(Aoife, Fraser, 1),\n    ],\n    2: Chambermaid.Ping(Josh, Fraser, 2),\n}),\n"},
        { name: "PoppyGrower", value: "Player('Katharine', claim=PoppyGrower),\n"},
        { name: "Princess", value: "Player('Jasmine', claim=Princess),\n"},
        { name: "Ravenkeeper", value: "Player('Matthew', claim=Ravenkeeper, night_info={\n    2: Ravenkeeper.Ping(Josh, Imp)\n}),\n"},
        { name: "Sage", value: "Player('Fraser', claim=Sage, night_info={\n    2: Sage.Ping(Sarah, Josh),\n}),\n"},
        { name: "Savant", value: "Player('You', claim=Savant, day_info={\n    1: Savant.Ping(\n        IsCategory(Karen, OUTSIDER) | IsCategory(Sam, OUTSIDER),\n        IsInPlay(Lunatic) ^ IsInPlay(Barber),\n    ),\n    2: Savant.Ping(\n        ExactlyN(N=2, args=[IsEvil(Fraser), IsEvil(Anna), IsEvil(Steph)]),\n        Chef.Ping(1),\n    ),\n}),\n"},
        { name: "Seamstress", value: "Player('Anna', claim=Seamstress, night_info={\n    1: Seamstress.Ping(Sula, Oscar, same=False),\n}),\n"},
        { name: "Shugenja", value: "Player('Aoife', claim=Shugenja, night_info={\n    1: Shugenja.Ping(clockwise=False),\n}),\n"},
        { name: "Slayer", value: "Player('You', claim=Slayer, day_info={\n    1: Slayer.Shot(Tom, died=True),\n}),\n"},
        { name: "SnakeCharmer", value: "Player('Hannah', claim=SnakeCharmer, night_info={\n    1: SnakeCharmer.Choice(Sarah),\n    2: SnakeCharmer.Choice(Oscar),\n    3: SnakeCharmer.Choice(Aoife),\n}),\n"},
        { name: "Soldier", value: "Player('Josh', claim=Soldier),\n"},
        { name: "Steward", value: "Player('Sula', claim=Steward, night_info={\n    1: Steward.Ping(Matt)\n}),\n"},
        { name: "Undertaker", value: "Player('Steve', claim=Undertaker, night_info={\n    2: Undertaker.Ping(Steffen, Poisoner),\n    3: Undertaker.Ping(You, Poisoner),\n}),\n"},
        { name: "VillageIdiot", value: "Player('Fraser', claim=VillageIdiot, night_info={\n    1: VillageIdiot.Ping(Sarah, is_evil=False),\n    2: VillageIdiot.Ping(Aoife, is_evil=False),\n}),\n"},
        { name: "Virgin", value: "Player('Mary', claim=Virgin, day_info={\n    1: UneventfulNomination(Balthazar)\n}),\n# Or add ExecutionByST(player=Balthazar, after_nominating=Mary) to day_events\n"},
        { name: "Washerwoman", value: "Player('Matthew', claim=Washerwoman, night_info={\n    1: Washerwoman.Ping(Aoife, Oscar, Librarian)\n}),\n"}
    ],
    "Outsiders": [
        { name: "Butler", value: "Player('Hannah', claim=Butler),\n"},
        { name: "Drunk", value: "Player('Dim', claim=Drunk),\n"},
        { name: "Golem", value: "Player('Rocket', claim=Golem),\n# For Golem punch, put Dies(player=Josh, after_nominated_by=Rocket)\n"},
        { name: "Hermit", value: "# Hermit.set_outsiders(Saint, Recluse, Butler)\nPlayer('Nicola', claim=Hermit),\n"},
        { name: "Klutz", value: "Player('Olivia', claim=Klutz, day_info={\n    2: Klutz.Choice(Adam),\n}),\n"},
        { name: "Lunatic", value: "Player('Tim', claim=Lunatic),\n"},
        { name: "Mutant", value: "Player('Phil', claim=Mutant, day_info={\n    1: ExecutionByST(Phil),\n}),\n"},
        { name: "Puzzlemaster", value: "Player('You', claim=Puzzlemaster, day_info={\n    2: Puzzlemaster.Ping(guess=Adam, demon=Balthazar),\n}),\n"},
        { name: "Recluse", value: "Player('Tom', claim=Recluse),\n"},
        { name: "Saint", value: "Player('Tim', claim=Saint),\n"},
    ],
    "Minions": [
        { name: "Baron", value: "Player('Fraser', claim=Baron),\n"},
        { name: "Boffin", value: "Player('Herrman', claim=Boffin),\n"},
        { name: "EvilTwin", value: "Player('Hannah', claim=Empath, night_info={\n    1: [\n        EvilTwin.Is(Jasmine),\n        Empath.Ping(0),\n    ],\n    2: Empath.Ping(1),\n}),\n"},
        { name: "Goblin", value: "Player('Fraser', claim=Goblin),\n"},
        { name: "Marionette", value: "Player('Frayser', claim=Marionette),\n"},
        { name: "Poisoner", value: "Player('Fraiser', claim=Poisoner),\n"},
        { name: "ScarletWoman", value: "Player('Frasure', claim=ScarletWoman),\n"},
        { name: "Spy", value: "Player('Frazer', claim=Spy),\n"},
        { name: "Widow", value: "Player('Freezer', claim=Widow),\n# Give someone else a Widow.InPlay() ping in their night info\n"},
        { name: "Witch", value: "Player('Fraser', claim=Flowergirl, day_info={\n    1: Dies(after_nominating=True)\n}),\n"},
        { name: "Xaan", value: "Player('Fraxer', claim=Xaan),\n"},
    ],
    "Demons": [
        { name: "FangGu", value: "Player('Jerry', claim=FangGu),\n"},
        { name: "Imp", value: "Player('Jasmine', claim=Imp),\n"},
        { name: "Kazali", value: "Player('Jonny', claim=Kazali),\n"},
        { name: "Leviathan", value: "Player('Jenny', claim=Leviathan),\n"},
        { name: "LordOfTyphon", value: "Player('Jeramiah', claim=LordOfTyphon),\n"},
        { name: "NoDashii", value: "Player('Jensen', claim=NoDashii),\n"},
        { name: "Po", value: "Player('Jacob', claim=Po),\n"},
        { name: "Pukka", value: "Player('Josef', claim=Pukka),\n"},
        { name: "Riot", value: "Player('Jonathan', claim=Riot),\n"},
        { name: "Vigormortis", value: "Player('Janet', claim=Vigormortis),\n"},
        { name: "Vortox", value: "Player('Gerald', claim=Vortox),\n"},
    ],
    "Homebrews": [
        { name: "Progidy", value: "Player('Matt', claim=Progidy, night_info={\n    1: Progidy.Ping(Dan, Tim),\n    2: Progidy.Ping(Sarah, Dan),\n    3: Progidy.Ping(Sarah, Steph),\n}),\n"},
    ],
};

const Townsfolk = characterSamples['Townsfolk'].map((item) => item.name);
const Outsiders = characterSamples['Outsiders'].map((item) => item.name);
const Homebrews = characterSamples['Homebrews'].map((item) => item.name);
const Evils = characterSamples['Minions'].concat(characterSamples['Demons'])
                                        .map((item) => item.name);
